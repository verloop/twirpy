# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: haberdasher.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11haberdasher.proto\x12\x14twitch.twirp.example\">\n\x03Hat\x12\x0c\n\x04size\x18\x01 \x01(\x05\x12\r\n\x05\x63olor\x18\x02 \x01(\t\x12\x11\n\x04name\x18\x03 \x01(\tH\x00\x88\x01\x01\x42\x07\n\x05_name\"\x16\n\x04Size\x12\x0e\n\x06inches\x18\x01 \x01(\x05\x32O\n\x0bHaberdasher\x12@\n\x07MakeHat\x12\x1a.twitch.twirp.example.Size\x1a\x19.twitch.twirp.example.HatB\tZ\x07\x65xampleb\x06proto3')



_HAT = DESCRIPTOR.message_types_by_name['Hat']
_SIZE = DESCRIPTOR.message_types_by_name['Size']
Hat = _reflection.GeneratedProtocolMessageType('Hat', (_message.Message,), {
  'DESCRIPTOR' : _HAT,
  '__module__' : 'haberdasher_pb2'
  # @@protoc_insertion_point(class_scope:twitch.twirp.example.Hat)
  })
_sym_db.RegisterMessage(Hat)

Size = _reflection.GeneratedProtocolMessageType('Size', (_message.Message,), {
  'DESCRIPTOR' : _SIZE,
  '__module__' : 'haberdasher_pb2'
  # @@protoc_insertion_point(class_scope:twitch.twirp.example.Size)
  })
_sym_db.RegisterMessage(Size)

_HABERDASHER = DESCRIPTOR.services_by_name['Haberdasher']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\007example'
  _HAT._serialized_start=43
  _HAT._serialized_end=105
  _SIZE._serialized_start=107
  _SIZE._serialized_end=129
  _HABERDASHER._serialized_start=131
  _HABERDASHER._serialized_end=210
# @@protoc_insertion_point(module_scope)
